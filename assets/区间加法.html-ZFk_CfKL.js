const n=JSON.parse('{"key":"v-25ea5dd0","path":"/posts/leetCode/%E6%95%B0%E7%BB%84/%E5%8C%BA%E9%97%B4%E5%8A%A0%E6%B3%95.html","title":"区间加法","lang":"zh-CN","frontmatter":{"icon":"array","description":"区间加法 假设你有一个长度为&nbsp;n&nbsp;的数组，初始情况下所有的数字均为&nbsp;0，你将会被给出&nbsp;k 个更新的操作。 其中，每个操作会被表示为一个三元组：[startIndex, endIndex, inc]，你需要将子数组&nbsp;A[startIndex ... endIndex]（包括 startIndex 和 endIndex）增加&nbsp;inc。 请你返回&nbsp;k&nbsp;次操作后的数组。 输入: length = 5, updates = [[1,3,2],[2,4,3],[0,2,-2]] 输出: [-2,0,3,5,3]","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/leetCode/%E6%95%B0%E7%BB%84/%E5%8C%BA%E9%97%B4%E5%8A%A0%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"区间加法"}],["meta",{"property":"og:description","content":"区间加法 假设你有一个长度为&nbsp;n&nbsp;的数组，初始情况下所有的数字均为&nbsp;0，你将会被给出&nbsp;k 个更新的操作。 其中，每个操作会被表示为一个三元组：[startIndex, endIndex, inc]，你需要将子数组&nbsp;A[startIndex ... endIndex]（包括 startIndex 和 endIndex）增加&nbsp;inc。 请你返回&nbsp;k&nbsp;次操作后的数组。 输入: length = 5, updates = [[1,3,2],[2,4,3],[0,2,-2]] 输出: [-2,0,3,5,3]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T07:59:00.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-03-01T07:59:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"区间加法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T07:59:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"思路分析：","slug":"思路分析","link":"#思路分析","children":[]},{"level":2,"title":"代码实现：","slug":"代码实现","link":"#代码实现","children":[]}],"git":{"createdTime":1709279940000,"updatedTime":1709279940000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":1.78,"words":533},"filePathRelative":"posts/leetCode/数组/区间加法.md","localizedDate":"2024年3月1日","excerpt":"<h1> 区间加法</h1>\\n<p>假设你有一个长度为&nbsp;n&nbsp;的数组，初始情况下所有的数字均为&nbsp;0，你将会被给出&nbsp;k 个更新的操作。</p>\\n<ul>\\n<li>\\n<p>其中，每个操作会被表示为一个三元组：[startIndex, endIndex, inc]，你需要将子数组&nbsp;A[startIndex ... endIndex]（包括 startIndex 和 endIndex）增加&nbsp;inc。</p>\\n</li>\\n<li>\\n<p>请你返回&nbsp;k&nbsp;次操作后的数组。</p>\\n</li>\\n</ul>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token literal-property property\\">输入</span><span class=\\"token operator\\">:</span> length <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> updates <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token literal-property property\\">输出</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
