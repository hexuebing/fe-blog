const n=JSON.parse(`{"key":"v-f0def5aa","path":"/posts/leetCode/%E9%85%8D%E4%BD%8D%E4%BA%A4%E6%8D%A2.html","title":"配位交换（😳）","lang":"zh-CN","frontmatter":{"icon":"array","date":"2022-01-21T00:00:00.000Z","category":["算法"],"tag":["互换"],"description":"配位交换（😳） 配位交换 配位交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）。 /** * @param {number} num * @return {number} */ var exchangeBits = function(num) { let str = num.toString(2) let res = '' if (str.length % 2 === 1) str = '0' + str for(let i = 1; i &lt;= str.length; i++) { if(i % 2 === 1) res = res + str[i] + str[i-1] } return parseInt(res, 2) };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/leetCode/%E9%85%8D%E4%BD%8D%E4%BA%A4%E6%8D%A2.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"配位交换（😳）"}],["meta",{"property":"og:description","content":"配位交换（😳） 配位交换 配位交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）。 /** * @param {number} num * @return {number} */ var exchangeBits = function(num) { let str = num.toString(2) let res = '' if (str.length % 2 === 1) str = '0' + str for(let i = 1; i &lt;= str.length; i++) { if(i % 2 === 1) res = res + str[i] + str[i-1] } return parseInt(res, 2) };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-29T07:08:53.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:tag","content":"互换"}],["meta",{"property":"article:published_time","content":"2022-01-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-29T07:08:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配位交换（😳）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-29T07:08:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1706512133000,"updatedTime":1706512133000,"contributors":[{"name":"何雪斌","email":"hexuebin@megvii.com","commits":1}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"posts/leetCode/配位交换.md","localizedDate":"2022年1月21日","excerpt":"<h1> 配位交换（😳）</h1>\\n<p><a href=\\"https://leetcode.cn/problems/exchange-lcci/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">配位交换</a></p>\\n<p>配位交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）。</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token comment\\">/**\\n * @param {number} num\\n * @return {number}\\n */</span>\\n<span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">exchangeBits</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">num</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> str <span class=\\"token operator\\">=</span> num<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">let</span> res <span class=\\"token operator\\">=</span> <span class=\\"token string\\">''</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>str<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">%</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> str <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'0'</span> <span class=\\"token operator\\">+</span> str\\n    <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> str<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">%</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> res <span class=\\"token operator\\">=</span> res <span class=\\"token operator\\">+</span> str<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> str<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
