const e=JSON.parse('{"key":"v-2722dddc","path":"/posts/other/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A6%82%E4%BD%95%E6%B8%B2%E6%9F%93%E7%BD%91%E9%A1%B5.html","title":"浏览器如何渲染网页","lang":"zh-CN","frontmatter":{"description":"浏览器如何渲染网页 浏览器如何将一个url绘制成页面 DNS解析：浏览器首先会进行DNS解析，将域名解析为服务器的IP地址，以便建立与服务器的连接。 建立TCP连接：浏览器通过TCP协议与服务器建立连接，以便发送和接收数据。 发送HTTP请求：浏览器向服务器发送HTTP请求，请求特定的资源（如HTML、CSS、JavaScript文件等）。 服务器处理请求：服务器接收到请求后，会处理请求并返回相应的资源。服务器端可能会进行一些处理，如数据库查询、动态内容生成等。 接收响应：浏览器接收到服务器返回的响应，响应包括HTTP状态码、响应头和响应体。 解析HTML：浏览器开始解析HTML文件，构建DOM（文档对象模型）树。 构建CSSOM：浏览器解析CSS文件，构建CSS对象模型（CSSOM）。 合并DOM和CSSOM：浏览器将DOM和CSSOM合并成一个渲染树（Render Tree），用于确定页面上元素的布局。 布局和绘制：浏览器根据渲染树进行布局（Layout）和绘制（Paint），确定每个元素在页面上的位置和样式。 渲染页面：最终，浏览器将页面渲染到屏幕上，用户就可以看到页面内容了。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/other/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A6%82%E4%BD%95%E6%B8%B2%E6%9F%93%E7%BD%91%E9%A1%B5.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"浏览器如何渲染网页"}],["meta",{"property":"og:description","content":"浏览器如何渲染网页 浏览器如何将一个url绘制成页面 DNS解析：浏览器首先会进行DNS解析，将域名解析为服务器的IP地址，以便建立与服务器的连接。 建立TCP连接：浏览器通过TCP协议与服务器建立连接，以便发送和接收数据。 发送HTTP请求：浏览器向服务器发送HTTP请求，请求特定的资源（如HTML、CSS、JavaScript文件等）。 服务器处理请求：服务器接收到请求后，会处理请求并返回相应的资源。服务器端可能会进行一些处理，如数据库查询、动态内容生成等。 接收响应：浏览器接收到服务器返回的响应，响应包括HTTP状态码、响应头和响应体。 解析HTML：浏览器开始解析HTML文件，构建DOM（文档对象模型）树。 构建CSSOM：浏览器解析CSS文件，构建CSS对象模型（CSSOM）。 合并DOM和CSSOM：浏览器将DOM和CSSOM合并成一个渲染树（Render Tree），用于确定页面上元素的布局。 布局和绘制：浏览器根据渲染树进行布局（Layout）和绘制（Paint），确定每个元素在页面上的位置和样式。 渲染页面：最终，浏览器将页面渲染到屏幕上，用户就可以看到页面内容了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T21:38:28.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-02-25T21:38:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器如何渲染网页\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-25T21:38:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"浏览器如何将一个url绘制成页面","slug":"浏览器如何将一个url绘制成页面","link":"#浏览器如何将一个url绘制成页面","children":[]},{"level":2,"title":"重绘和回流","slug":"重绘和回流","link":"#重绘和回流","children":[{"level":3,"title":"减少重绘和回流","slug":"减少重绘和回流","link":"#减少重绘和回流","children":[]}]}],"git":{"createdTime":1708897108000,"updatedTime":1708897108000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":1.83,"words":549},"filePathRelative":"posts/other/浏览器如何渲染网页.md","localizedDate":"2024年2月25日","excerpt":"<h1> 浏览器如何渲染网页</h1>\\n<h2> 浏览器如何将一个url绘制成页面</h2>\\n<ul>\\n<li>\\n<p>DNS解析：浏览器首先会进行DNS解析，将域名解析为服务器的IP地址，以便建立与服务器的连接。</p>\\n</li>\\n<li>\\n<p>建立TCP连接：浏览器通过TCP协议与服务器建立连接，以便发送和接收数据。</p>\\n</li>\\n<li>\\n<p>发送HTTP请求：浏览器向服务器发送HTTP请求，请求特定的资源（如HTML、CSS、JavaScript文件等）。</p>\\n</li>\\n<li>\\n<p>服务器处理请求：服务器接收到请求后，会处理请求并返回相应的资源。服务器端可能会进行一些处理，如数据库查询、动态内容生成等。</p>\\n</li>\\n<li>\\n<p>接收响应：浏览器接收到服务器返回的响应，响应包括HTTP状态码、响应头和响应体。</p>\\n</li>\\n<li>\\n<p>解析HTML：浏览器开始解析HTML文件，构建DOM（文档对象模型）树。</p>\\n</li>\\n<li>\\n<p>构建CSSOM：浏览器解析CSS文件，构建CSS对象模型（CSSOM）。</p>\\n</li>\\n<li>\\n<p>合并DOM和CSSOM：浏览器将DOM和CSSOM合并成一个渲染树（Render Tree），用于确定页面上元素的布局。</p>\\n</li>\\n<li>\\n<p>布局和绘制：浏览器根据渲染树进行布局（Layout）和绘制（Paint），确定每个元素在页面上的位置和样式。</p>\\n</li>\\n<li>\\n<p>渲染页面：最终，浏览器将页面渲染到屏幕上，用户就可以看到页面内容了。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
