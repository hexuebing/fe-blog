import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as p}from"./app-aAadlHPo.js";const t="/fe-blog/assets/curve-qGLH6PQH.svg",e="/fe-blog/assets/curvepath-MymuHFSE.jpg",o="/fe-blog/assets/tubegeometry-s4D5LopD.jpg",c={},l=p('<h1 id="曲线curve" tabindex="-1"><a class="header-anchor" href="#曲线curve" aria-hidden="true">#</a> 曲线Curve</h1><p>threejs提供了很多常用的曲线或直线API，可以直接使用</p><figure><img src="'+t+`" alt="曲线" tabindex="0" loading="lazy"><figcaption>曲线</figcaption></figure><h2 id="椭圆ellipsecurve" tabindex="-1"><a class="header-anchor" href="#椭圆ellipsecurve" aria-hidden="true">#</a> 椭圆EllipseCurve</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 参数1和2表示椭圆中心坐标  参数3和4表示x和y方向半径</span>
<span class="token keyword">const</span> arc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>EllipseCurve</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//getPoints是基类Curve的方法，平面曲线会返回一个vector2对象作为元素组成的数组</span>
<span class="token keyword">const</span> pointsArr <span class="token operator">=</span> arc<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//分段数50，返回51个顶点</span>

<span class="token comment">// 数组pointsArr里面的坐标数据提取出来，赋值给geometry.attributes.position属性</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
geometry<span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span>pointsArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过<code>.getSpacedPoints()</code>和<code>.getPoints()</code>一样也可以从曲线Curve上返回一系列曲线上的顶点坐标。</p><p>通过<code>.getSpacedPoints()</code>是按照曲线长度等间距返回顶点数据，<code>.getPoints(</code>)获取点的方式并不是按照曲线等间距的方式，而是会考虑曲线斜率变化，斜率变化快的位置返回的顶点更密集。</p><h2 id="curvepath拼接曲线" tabindex="-1"><a class="header-anchor" href="#curvepath拼接曲线" aria-hidden="true">#</a> CurvePath拼接曲线</h2><figure><img src="`+e+`" alt="拼接直线与曲线" tabindex="0" loading="lazy"><figcaption>拼接直线与曲线</figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">R</span> <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token comment">//圆弧半径</span>
<span class="token keyword">const</span> <span class="token constant">H</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token comment">//直线部分高度</span>
<span class="token comment">// 直线1</span>
<span class="token keyword">const</span> line1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineCurve</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">H</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 圆弧</span>
<span class="token keyword">const</span> arc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>ArcCurve</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 直线2</span>
<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineCurve</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">H</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// CurvePath创建一个组合曲线对象</span>
<span class="token keyword">const</span> CurvePath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CurvePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//line1, arc, line2拼接出来一个U型轮廓曲线，注意顺序</span>
CurvePath<span class="token punctuation">.</span>curves<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>line1<span class="token punctuation">,</span> arc<span class="token punctuation">,</span> line2<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 执行.getPoints()，直线部分不会像曲线返回中间多余点，只需要起始点即可。</span>
<span class="token keyword">const</span> pointsArr <span class="token operator">=</span> CurvePath<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//曲线上获取点</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
geometry<span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span>pointsArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取坐标数据赋值给几何体顶点</span>

<span class="token comment">// 可视化curve.getPoints从曲线上获取的点坐标</span>
<span class="token keyword">const</span> material2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PointsMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff00ff</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//点模型对象</span>
<span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Points</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="曲线路径管道tubegeometry" tabindex="-1"><a class="header-anchor" href="#曲线路径管道tubegeometry" aria-hidden="true">#</a> 曲线路径管道TubeGeometry</h2><figure><img src="`+o+`" alt="管道缓冲几何体" tabindex="0" loading="lazy"><figcaption>管道缓冲几何体</figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 三维样条曲线</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CatmullRomCurve3</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// path:路径   40：沿着轨迹细分数  2：管道半径   25：管道截面圆细分数</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TubeGeometry</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshNormalMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">side</span><span class="token operator">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>DoubleSide<span class="token punctuation">,</span>
  <span class="token literal-property property">wireframe</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),u=[l];function i(r,k){return s(),a("div",null,u)}const v=n(c,[["render",i],["__file","曲线Curve.html.vue"]]);export{v as default};
