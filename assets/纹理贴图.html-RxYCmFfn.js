const e=JSON.parse(`{"key":"v-343b6b14","path":"/posts/ThreeJS/%E7%BA%B9%E7%90%86%E8%B4%B4%E5%9B%BE.html","title":"纹理贴图","lang":"zh-CN","frontmatter":{"description":"纹理贴图 通过纹理贴图加载器TextureLoader的load()方法加载一张图片可以返回一个纹理对象Texture，纹理对象Texture可以作为模型材质颜色贴图.map属性的值 const geometry = new THREE.PlaneGeometry(200, 100); //纹理贴图加载器TextureLoader const texLoader = new THREE.TextureLoader(); // .load()方法加载图像，返回一个纹理对象Texture const texture = texLoader.load('./earth.jpg'); const material = new THREE.MeshLambertMaterial({ // 设置纹理贴图：Texture对象作为材质map属性的属性值 map: texture,//map表示材质的颜色贴图属性 });","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/ThreeJS/%E7%BA%B9%E7%90%86%E8%B4%B4%E5%9B%BE.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"纹理贴图"}],["meta",{"property":"og:description","content":"纹理贴图 通过纹理贴图加载器TextureLoader的load()方法加载一张图片可以返回一个纹理对象Texture，纹理对象Texture可以作为模型材质颜色贴图.map属性的值 const geometry = new THREE.PlaneGeometry(200, 100); //纹理贴图加载器TextureLoader const texLoader = new THREE.TextureLoader(); // .load()方法加载图像，返回一个纹理对象Texture const texture = texLoader.load('./earth.jpg'); const material = new THREE.MeshLambertMaterial({ // 设置纹理贴图：Texture对象作为材质map属性的属性值 map: texture,//map表示材质的颜色贴图属性 });"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/fe-blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-02T09:29:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"纹理贴图"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-02-02T09:29:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"纹理贴图\\",\\"image\\":[\\"https://mister-hope.github.io/fe-blog/\\"],\\"dateModified\\":\\"2024-02-02T09:29:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"UV坐标","slug":"uv坐标","link":"#uv坐标","children":[{"level":3,"title":"顶点UV坐标","slug":"顶点uv坐标","link":"#顶点uv坐标","children":[]},{"level":3,"title":"自定义UV坐标","slug":"自定义uv坐标","link":"#自定义uv坐标","children":[]}]},{"level":2,"title":"阵列功能","slug":"阵列功能","link":"#阵列功能","children":[]},{"level":2,"title":"透明PNG贴图","slug":"透明png贴图","link":"#透明png贴图","children":[]},{"level":2,"title":"贴图动画","slug":"贴图动画","link":"#贴图动画","children":[]}],"git":{"createdTime":1706866160000,"updatedTime":1706866160000,"contributors":[{"name":"何雪斌","email":"hexuebin@megvii.com","commits":1}]},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"posts/ThreeJS/纹理贴图.md","localizedDate":"2024年2月2日","excerpt":"<h1> 纹理贴图</h1>\\n<p>通过纹理贴图加载器TextureLoader的load()方法加载一张图片可以返回一个纹理对象Texture，纹理对象Texture可以作为模型材质颜色贴图.map属性的值</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> geometry <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>PlaneGeometry</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">200</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n<span class=\\"token comment\\">//纹理贴图加载器TextureLoader</span>\\n<span class=\\"token keyword\\">const</span> texLoader <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>TextureLoader</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// .load()方法加载图像，返回一个纹理对象Texture</span>\\n<span class=\\"token keyword\\">const</span> texture <span class=\\"token operator\\">=</span> texLoader<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">load</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./earth.jpg'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> material <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>MeshLambertMaterial</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 设置纹理贴图：Texture对象作为材质map属性的属性值</span>\\n    <span class=\\"token literal-property property\\">map</span><span class=\\"token operator\\">:</span> texture<span class=\\"token punctuation\\">,</span><span class=\\"token comment\\">//map表示材质的颜色贴图属性</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
