const n=JSON.parse('{"key":"v-fbb3328e","path":"/posts/leetCode/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html","title":"二叉树的最大深度","lang":"zh-CN","frontmatter":{"description":"二叉树的最大深度 直接去遍历 function maxDeep (root) { let result = 0 let deep = 0 function travel(root){ if(root === null) return // 节点不为空，让深度加一 deep++ // 更新最大深度 result = Math.max(result, deep) travel(root.left) travel(root.right) // 遍历完毕返回上一层节点，深度减一 deep-- } travel(root) return result 0 }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/leetCode/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"二叉树的最大深度"}],["meta",{"property":"og:description","content":"二叉树的最大深度 直接去遍历 function maxDeep (root) { let result = 0 let deep = 0 function travel(root){ if(root === null) return // 节点不为空，让深度加一 deep++ // 更新最大深度 result = Math.max(result, deep) travel(root.left) travel(root.right) // 遍历完毕返回上一层节点，深度减一 deep-- } travel(root) return result 0 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T00:31:16.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-03-01T00:31:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树的最大深度\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T00:31:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"直接去遍历","slug":"直接去遍历","link":"#直接去遍历","children":[]},{"level":2,"title":"子树最大深度加一","slug":"子树最大深度加一","link":"#子树最大深度加一","children":[]}],"git":{"createdTime":1709253076000,"updatedTime":1709253076000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":0.36,"words":109},"filePathRelative":"posts/leetCode/二叉树/二叉树的最大深度.md","localizedDate":"2024年3月1日","excerpt":"<h1> 二叉树的最大深度</h1>\\n<h2> 直接去遍历</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">maxDeep</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">root</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> result <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n  <span class=\\"token keyword\\">let</span> deep <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n  <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">travel</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">root</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>root <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token comment\\">// 节点不为空，让深度加一</span>\\n    deep<span class=\\"token operator\\">++</span>\\n    <span class=\\"token comment\\">// 更新最大深度</span>\\n    result <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span>result<span class=\\"token punctuation\\">,</span> deep<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">travel</span><span class=\\"token punctuation\\">(</span>root<span class=\\"token punctuation\\">.</span>left<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">travel</span><span class=\\"token punctuation\\">(</span>root<span class=\\"token punctuation\\">.</span>right<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\">// 遍历完毕返回上一层节点，深度减一</span>\\n    deep<span class=\\"token operator\\">--</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">travel</span><span class=\\"token punctuation\\">(</span>root<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">return</span> result <span class=\\"token number\\">0</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
