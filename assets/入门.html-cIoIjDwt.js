import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as e}from"./app-3sod6nVV.js";const t="/fe-blog/assets/camera-W8zZ1WM4.png",p={},c=e(`<h1 id="threejs入门" tabindex="-1"><a class="header-anchor" href="#threejs入门" aria-hidden="true">#</a> ThreeJS入门</h1><p>入门Three.js的第一步，就是认识场景Scene、相机Camera、渲染器Renderer三个基本概念</p><h2 id="场景scene" tabindex="-1"><a class="header-anchor" href="#场景scene" aria-hidden="true">#</a> 场景Scene</h2><p>你可以把三维场景Scene (opens new window)对象理解为虚拟的3D场景，用来表示模拟生活中的真实三维场景,或者说三维世界。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建3D场景对象Scene</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="物体-网格模型mesh" tabindex="-1"><a class="header-anchor" href="#物体-网格模型mesh" aria-hidden="true">#</a> 物体：网格模型Mesh</h3><p>实际生活中有各种各样的物体，在threejs中可以通过网格模型Mesh (opens new window)表示一个虚拟的物体，比如一个箱子、一个鼠标。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 两个参数分别为几何体geometry、材质material</span>
<span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//网格模型对象Mesh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Mesh模型由两部分组成：几何体geometry, 材质material</p><h4 id="物体形状-几何体geometry" tabindex="-1"><a class="header-anchor" href="#物体形状-几何体geometry" aria-hidden="true">#</a> 物体形状：几何体Geometry</h4><p>Three.js提供了各种各样的几何体API，用来表示三维物体的几何形状。 比如常见的长方体BoxGeometry，球体SphereGeometry，圆平面CircleGeometry等</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建一个长方体几何对象Geometry</span>
<span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="物体外观-材质material" tabindex="-1"><a class="header-anchor" href="#物体外观-材质material" aria-hidden="true">#</a> 物体外观：材质Material</h4><p>如果你想定义物体的外观效果，比如颜色，就需要通过材质Material相关的API实现</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建一个材质对象Material</span>
<span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span><span class="token punctuation">,</span><span class="token comment">//0xff0000设置材质颜色为红色</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模型位置" tabindex="-1"><a class="header-anchor" href="#模型位置" aria-hidden="true">#</a> 模型位置</h3><p>通过位置属性.position定义网格模型Mesh在三维场景Scene中的位置，不设置默认是坐标原点。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//网格模型对象Mesh</span>
<span class="token comment">//设置网格模型在三维空间中的位置坐标，默认是坐标原点</span>
mesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加到scene" tabindex="-1"><a class="header-anchor" href="#添加到scene" aria-hidden="true">#</a> 添加到Scene</h3><p>把网格模型mesh添加到三维场景scene中。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="虚拟相机" tabindex="-1"><a class="header-anchor" href="#虚拟相机" aria-hidden="true">#</a> 虚拟相机</h2><p>Threejs提供了<strong>正投影相机OrthographicCamera</strong>和<strong>透视投影相机PerspectiveCamera</strong></p><h3 id="透视投影相机perspectivecamera" tabindex="-1"><a class="header-anchor" href="#透视投影相机perspectivecamera" aria-hidden="true">#</a> 透视投影相机PerspectiveCamera</h3><p>透视投影相机PerspectiveCamera本质上就是在模拟人眼观察这个世界的规律。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 实例化一个透视投影相机对象</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="相机位置" tabindex="-1"><a class="header-anchor" href="#相机位置" aria-hidden="true">#</a> 相机位置</h4><p>相机对象Camera具有位置属性.position，通过位置属性.position可以设置相机的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//相机在Three.js三维坐标系中的位置</span>
<span class="token comment">// 根据需要设置相机位置具体值</span>
camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="相机观察目标" tabindex="-1"><a class="header-anchor" href="#相机观察目标" aria-hidden="true">#</a> 相机观察目标</h4><p>相机镜头对准哪个位置，通过设置<code>.lookAt()</code>方法指定一个三维坐标</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//坐标原点</span>

camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//指向mesh对应的位置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="视锥体" tabindex="-1"><a class="header-anchor" href="#视锥体" aria-hidden="true">#</a> 视锥体</h4><p>透视投影相机的四个参数fov, aspect, near, far构成一个四棱台3D空间，被称为视锥体，只有视锥体之内的物体，才会渲染出来，视锥体范围之外的物体不会显示在Canvas画布上。</p><figure><img src="`+t+`" alt="视锥体" tabindex="0" loading="lazy"><figcaption>视锥体</figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// width和height用来设置Three.js输出的Canvas画布尺寸(像素px)</span>
<span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span> <span class="token comment">//宽度</span>
<span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span> <span class="token comment">//高度</span>
<span class="token comment">// 30:视场角度, width / height:Canvas画布宽高比, 1:近裁截面, 3000：远裁截面</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> width <span class="token operator">/</span> height<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webgl渲染器webglrender" tabindex="-1"><a class="header-anchor" href="#webgl渲染器webglrender" aria-hidden="true">#</a> WebGL渲染器WebGLRender</h2><p>通过WebGL渲染器WebGLRenderer可以实例化一个WebGL渲染器对象,渲染器WebGLRenderer执行渲染方法.render()就可以生成一个Canvas画布(照片)，并把三维场景Scene呈现在canvas画布上面。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建渲染器对象</span>
<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//执行渲染操作</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置canvas画布尺寸" tabindex="-1"><a class="header-anchor" href="#设置canvas画布尺寸" aria-hidden="true">#</a> 设置Canvas画布尺寸</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 定义threejs输出画布的尺寸(单位:像素px)</span>
<span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">800</span><span class="token punctuation">;</span> <span class="token comment">//宽度</span>
<span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span> <span class="token comment">//高度</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置three.js渲染区域的尺寸(像素px)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="绘制生成的canvas画布插入到dom" tabindex="-1"><a class="header-anchor" href="#绘制生成的canvas画布插入到dom" aria-hidden="true">#</a> 绘制生成的Canvas画布插入到DOM</h3><p>渲染器WebGLRenderer通过属性.domElement可以获得渲染方法.render()生成的Canvas画布，.domElement本质上就是一个HTML元素：Canvas画布。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>webgl<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,45),o=[c];function i(l,r){return a(),s("div",null,o)}const k=n(p,[["render",i],["__file","入门.html.vue"]]);export{k as default};
