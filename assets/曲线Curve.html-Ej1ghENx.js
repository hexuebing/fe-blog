const e=JSON.parse('{"key":"v-40c9fff4","path":"/posts/ThreeJS/%E6%9B%B2%E7%BA%BFCurve.html","title":"曲线Curve","lang":"zh-CN","frontmatter":{"description":"曲线Curve threejs提供了很多常用的曲线或直线API，可以直接使用 曲线 椭圆EllipseCurve // 参数1和2表示椭圆中心坐标 参数3和4表示x和y方向半径 const arc = new THREE.EllipseCurve(0, 0, 100, 50); //getPoints是基类Curve的方法，平面曲线会返回一个vector2对象作为元素组成的数组 const pointsArr = arc.getPoints(50); //分段数50，返回51个顶点 // 数组pointsArr里面的坐标数据提取出来，赋值给geometry.attributes.position属性 const geometry = new THREE.BufferGeometry(); geometry.setFromPoints(pointsArr);","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/ThreeJS/%E6%9B%B2%E7%BA%BFCurve.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"曲线Curve"}],["meta",{"property":"og:description","content":"曲线Curve threejs提供了很多常用的曲线或直线API，可以直接使用 曲线 椭圆EllipseCurve // 参数1和2表示椭圆中心坐标 参数3和4表示x和y方向半径 const arc = new THREE.EllipseCurve(0, 0, 100, 50); //getPoints是基类Curve的方法，平面曲线会返回一个vector2对象作为元素组成的数组 const pointsArr = arc.getPoints(50); //分段数50，返回51个顶点 // 数组pointsArr里面的坐标数据提取出来，赋值给geometry.attributes.position属性 const geometry = new THREE.BufferGeometry(); geometry.setFromPoints(pointsArr);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/fe-blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-04T09:21:24.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"曲线Curve"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-02-04T09:21:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"曲线Curve\\",\\"image\\":[\\"https://mister-hope.github.io/fe-blog/\\"],\\"dateModified\\":\\"2024-02-04T09:21:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"椭圆EllipseCurve","slug":"椭圆ellipsecurve","link":"#椭圆ellipsecurve","children":[]},{"level":2,"title":"CurvePath拼接曲线","slug":"curvepath拼接曲线","link":"#curvepath拼接曲线","children":[]},{"level":2,"title":"曲线路径管道TubeGeometry","slug":"曲线路径管道tubegeometry","link":"#曲线路径管道tubegeometry","children":[]}],"git":{"createdTime":1707038484000,"updatedTime":1707038484000,"contributors":[{"name":"何雪斌","email":"hexuebin@megvii.com","commits":1}]},"readingTime":{"minutes":1.81,"words":543},"filePathRelative":"posts/ThreeJS/曲线Curve.md","localizedDate":"2024年2月4日","excerpt":"<h1> 曲线Curve</h1>\\n<p>threejs提供了很多常用的曲线或直线API，可以直接使用</p>\\n<figure><figcaption>曲线</figcaption></figure>\\n<h2> 椭圆EllipseCurve</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 参数1和2表示椭圆中心坐标  参数3和4表示x和y方向半径</span>\\n<span class=\\"token keyword\\">const</span> arc <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>EllipseCurve</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">//getPoints是基类Curve的方法，平面曲线会返回一个vector2对象作为元素组成的数组</span>\\n<span class=\\"token keyword\\">const</span> pointsArr <span class=\\"token operator\\">=</span> arc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPoints</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//分段数50，返回51个顶点</span>\\n\\n<span class=\\"token comment\\">// 数组pointsArr里面的坐标数据提取出来，赋值给geometry.attributes.position属性</span>\\n<span class=\\"token keyword\\">const</span> geometry <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">THREE<span class=\\"token punctuation\\">.</span>BufferGeometry</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\ngeometry<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setFromPoints</span><span class=\\"token punctuation\\">(</span>pointsArr<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
