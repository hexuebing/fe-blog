const t=JSON.parse('{"key":"v-2ec3ac99","path":"/posts/leetCode/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2.html","title":"最小覆盖子串","lang":"zh-CN","frontmatter":{"icon":"array","tag":["滑动窗口"],"description":"最小覆盖子串 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 \\"\\" 。 注意： 对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。 如果 s 中存在这样的子串，我们保证它是唯一的答案。 输入：s = \\"ADOBECODEBANC\\", t = \\"ABC\\" 输出：\\"BANC\\"","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/leetCode/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"最小覆盖子串"}],["meta",{"property":"og:description","content":"最小覆盖子串 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 \\"\\" 。 注意： 对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。 如果 s 中存在这样的子串，我们保证它是唯一的答案。 输入：s = \\"ADOBECODEBANC\\", t = \\"ABC\\" 输出：\\"BANC\\""}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T07:59:00.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:tag","content":"滑动窗口"}],["meta",{"property":"article:modified_time","content":"2024-03-01T07:59:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最小覆盖子串\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T07:59:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"思路分析","slug":"思路分析","link":"#思路分析","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"git":{"createdTime":1709279940000,"updatedTime":1709279940000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":2.39,"words":717},"filePathRelative":"posts/leetCode/字符串/最小覆盖子串.md","localizedDate":"2024年3月1日","excerpt":"<h1> 最小覆盖子串</h1>\\n<p>给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 \\"\\" 。</p>\\n<p>注意：</p>\\n<ul>\\n<li>对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。</li>\\n<li>如果 s 中存在这样的子串，我们保证它是唯一的答案。</li>\\n</ul>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code>输入：s <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"ADOBECODEBANC\\"</span><span class=\\"token punctuation\\">,</span> t <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"ABC\\"</span>\\n输出：<span class=\\"token string\\">\\"BANC\\"</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
