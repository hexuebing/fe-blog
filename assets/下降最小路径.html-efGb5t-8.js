const n=JSON.parse('{"key":"v-2ca65b80","path":"/posts/leetCode/%E4%B8%8B%E9%99%8D%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84.html","title":"下降路径最小和","lang":"zh-CN","frontmatter":{"icon":"tree","date":"2022-01-21T00:00:00.000Z","category":["算法"],"tag":["动态规划"],"star":true,"sticky":true,"description":"下降路径最小和 给你一个 n x n 的 方形 整数数组&nbsp;matrix ，请你找出并返回通过 matrix 的下降路径 的 最小和 。 下降路径 可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列（即位于正下方或者沿对角线向左或者向右的第一个元素）。具体来说，位置 (row, col) 的下一个元素应当是 (row + 1, col - 1)、(row + 1, col) 或者 (row + 1, col + 1) 。 输入：matrix = [[2,1,3],[6,5,4],[7,8,9]] 输出：13 解释：下面是两条和最小的下降路径，用加粗+斜体标注： [[2,***1***,3], [[2,***1***,3], [6,***5***,4], [6,5,***4***], [***7***,8,9]] [7,***8***,9]]","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/leetCode/%E4%B8%8B%E9%99%8D%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"下降路径最小和"}],["meta",{"property":"og:description","content":"下降路径最小和 给你一个 n x n 的 方形 整数数组&nbsp;matrix ，请你找出并返回通过 matrix 的下降路径 的 最小和 。 下降路径 可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列（即位于正下方或者沿对角线向左或者向右的第一个元素）。具体来说，位置 (row, col) 的下一个元素应当是 (row + 1, col - 1)、(row + 1, col) 或者 (row + 1, col + 1) 。 输入：matrix = [[2,1,3],[6,5,4],[7,8,9]] 输出：13 解释：下面是两条和最小的下降路径，用加粗+斜体标注： [[2,***1***,3], [[2,***1***,3], [6,***5***,4], [6,5,***4***], [***7***,8,9]] [7,***8***,9]]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/fe-blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-24T01:23:05.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"下降路径最小和"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:published_time","content":"2022-01-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-24T01:23:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"下降路径最小和\\",\\"image\\":[\\"https://mister-hope.github.io/fe-blog/\\"],\\"datePublished\\":\\"2022-01-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-24T01:23:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1708737785000,"updatedTime":1708737785000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"posts/leetCode/下降最小路径.md","localizedDate":"2022年1月21日","excerpt":"<h1> 下降路径最小和</h1>\\n<p>给你一个 n x n 的 方形 整数数组&nbsp;matrix ，请你找出并返回通过 matrix 的下降路径 的 最小和 。</p>\\n<p>下降路径 可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列（即位于正下方或者沿对角线向左或者向右的第一个元素）。具体来说，位置 (row, col) 的下一个元素应当是 (row + 1, col - 1)、(row + 1, col) 或者 (row + 1, col + 1) 。</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code>输入：matrix <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">7</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>\\n输出：<span class=\\"token number\\">13</span>\\n解释：下面是两条和最小的下降路径，用加粗<span class=\\"token operator\\">+</span>斜体标注：\\n<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">1</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>      <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">1</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">5</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>       <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">4</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">7</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>       <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">7</span><span class=\\"token punctuation\\">,</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">8</span><span class=\\"token operator\\">**</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
