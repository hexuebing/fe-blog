import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-irgbDHVj.js";const e={},p=t(`<h1 id="加载-gltf文件" tabindex="-1"><a class="header-anchor" href="#加载-gltf文件" aria-hidden="true">#</a> 加载.gltf文件</h1><p>加载外部三维模型的整个过程：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入gltf模型加载库GLTFLoader.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GLTFLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three/addons/loaders/GLTFLoader.js&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建GLTF加载器对象</span>
<span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span> <span class="token string">&#39;gltf模型.gltf&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span> <span class="token parameter">gltf</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;gltf对象场景属性&#39;</span><span class="token punctuation">,</span>gltf<span class="token punctuation">.</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 返回的场景对象gltf.scene插入到threejs场景中</span>
  scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> gltf<span class="token punctuation">.</span>scene <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>场景属性gltf.scene,该属性包含的是模型信息，比如几何体BufferGometry、材质Material、网格模型Mesh。</p><h2 id="设置相机" tabindex="-1"><a class="header-anchor" href="#设置相机" aria-hidden="true">#</a> 设置相机</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意相机控件OrbitControls会影响lookAt设置，注意手动设置OrbitControls的目标参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置相机控件轨道控制器OrbitControls</span>
<span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 相机控件.target属性在OrbitControls.js内部表示相机目标观察点，默认0,0,0</span>
controls<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//update()函数内会执行camera.lookAt(controls.targe)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测量尺寸大概几百的数量级，这里不用测具体尺寸，有个大概数量级即可，然后far设置为3000足够了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> width <span class="token operator">/</span> height<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="orbitcontrols辅助设置相机参数" tabindex="-1"><a class="header-anchor" href="#orbitcontrols辅助设置相机参数" aria-hidden="true">#</a> OrbitControls辅助设置相机参数</h3><p>参照OrbitControls设置相机位置.position的过程，你可以平移三维场景，然后选择一个合适的渲染效果, <code>camera.position.set()</code>; 记录下此时相机控件目标属性controls.target的值，然后作为透视投影相机.lookAt()的参数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 浏览器控制台查看相机位置变化</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;camera.position&#39;</span><span class="token punctuation">,</span>camera<span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 浏览器控制台查看controls.target变化，辅助设置lookAt参数</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;controls.target&#39;</span><span class="token punctuation">,</span>controls<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解决共享材质问题" tabindex="-1"><a class="header-anchor" href="#解决共享材质问题" aria-hidden="true">#</a> 解决共享材质问题</h2><ol><li>三维建模软件中设置，需要代码改变材质的Mesh不要共享材质，要独享材质。</li><li>代码批量更改：克隆材质对象，重新赋值给mesh的材质属性</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//用代码方式解决mesh共享材质问题</span>
gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span><span class="token string">&quot;小区房子&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>isMesh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// .material.clone()返回一个新材质对象，和原来一样，重新赋值给.material属性</span>
        obj<span class="token punctuation">.</span>material <span class="token operator">=</span> obj<span class="token punctuation">.</span>material<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更改gltf贴图" tabindex="-1"><a class="header-anchor" href="#更改gltf贴图" aria-hidden="true">#</a> 更改gltf贴图</h2><p>注意：如果你直接给gltf模型材质设置.map属性更换贴图，会出现纹理贴图错位的问题，这主要和纹理对象Texture的翻转属性.flipY有关</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;../手机模型.glb&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mesh <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//获取Mesh</span>
  mesh<span class="token punctuation">.</span>material<span class="token punctuation">.</span>map <span class="token operator">=</span> texture<span class="token punctuation">;</span> <span class="token comment">//更换不同风格的颜色贴图</span>

  <span class="token comment">// 如果更换单独加载的纹理贴图，注意把纹理贴图.flipY的值设置给gltf中纹理的值false</span>
  texture<span class="token punctuation">.</span>flipY <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","加载.gltf文件.html.vue"]]);export{d as default};
