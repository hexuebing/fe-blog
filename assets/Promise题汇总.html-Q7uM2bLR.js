const e=JSON.parse(`{"key":"v-16d46cb0","path":"/posts/JavaScript/Promise%E9%A2%98%E6%B1%87%E6%80%BB.html","title":"Promise题汇总","lang":"zh-CN","frontmatter":{"description":"Promise题汇总 遇到resolve会直接变更状态 const promise1 = new Promise((resolve, reject) =&gt; { console.log('promise1') resolve('resolve1') }) const promise2 = promise1.then(res =&gt; { console.log(res) }) console.log('1', promise1); console.log('2', promise2);","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/JavaScript/Promise%E9%A2%98%E6%B1%87%E6%80%BB.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"Promise题汇总"}],["meta",{"property":"og:description","content":"Promise题汇总 遇到resolve会直接变更状态 const promise1 = new Promise((resolve, reject) =&gt; { console.log('promise1') resolve('resolve1') }) const promise2 = promise1.then(res =&gt; { console.log(res) }) console.log('1', promise1); console.log('2', promise2);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T08:18:03.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-02-25T08:18:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Promise题汇总\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-25T08:18:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"遇到resolve会直接变更状态","slug":"遇到resolve会直接变更状态","link":"#遇到resolve会直接变更状态","children":[]},{"level":2,"title":"resolve后面的代码也会直接同步执行","slug":"resolve后面的代码也会直接同步执行","link":"#resolve后面的代码也会直接同步执行","children":[]},{"level":2,"title":"先微任务与后宏任务","slug":"先微任务与后宏任务","link":"#先微任务与后宏任务","children":[]},{"level":2,"title":"状态改变之后不会再变","slug":"状态改变之后不会再变","link":"#状态改变之后不会再变","children":[]},{"level":2,"title":".then方法传入非函数解释为then(null)","slug":"then方法传入非函数解释为then-null","link":"#then方法传入非函数解释为then-null","children":[]},{"level":2,"title":"无错误.catch，与有.catch得到的promise是不同的状态","slug":"无错误-catch-与有-catch得到的promise是不同的状态","link":"#无错误-catch-与有-catch得到的promise是不同的状态","children":[]},{"level":2,"title":"return错误会被包裹成return Promise.resolve(new Error())","slug":"return错误会被包裹成return-promise-resolve-new-error","link":"#return错误会被包裹成return-promise-resolve-new-error","children":[]},{"level":2,"title":".reject()的值直接进入失败的函数","slug":"reject-的值直接进入失败的函数","link":"#reject-的值直接进入失败的函数","children":[]},{"level":2,"title":"finally()默认返回上一个Promise对象值，是then方法的特例","slug":"finally-默认返回上一个promise对象值-是then方法的特例","link":"#finally-默认返回上一个promise对象值-是then方法的特例","children":[]},{"level":2,"title":"all的中有reject的会直接进入.catch，但是后续resolve自己的还是会跑完","slug":"all的中有reject的会直接进入-catch-但是后续resolve自己的还是会跑完","link":"#all的中有reject的会直接进入-catch-但是后续resolve自己的还是会跑完","children":[]},{"level":2,"title":"async里面的代码是同步代码","slug":"async里面的代码是同步代码","link":"#async里面的代码是同步代码","children":[]},{"level":2,"title":"先处理微任务后处理宏任务","slug":"先处理微任务后处理宏任务","link":"#先处理微任务后处理宏任务","children":[]},{"level":2,"title":"async函数中的await后面的Promise没有返回值的，将一直是pending状态","slug":"async函数中的await后面的promise没有返回值的-将一直是pending状态","link":"#async函数中的await后面的promise没有返回值的-将一直是pending状态","children":[]},{"level":2,"title":"await如果得到的是reject，不捕获将阻止后续代码","slug":"await如果得到的是reject-不捕获将阻止后续代码","link":"#await如果得到的是reject-不捕获将阻止后续代码","children":[]}],"git":{"createdTime":1708849083000,"updatedTime":1708849083000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":3.14,"words":941},"filePathRelative":"posts/JavaScript/Promise题汇总.md","localizedDate":"2024年2月25日","excerpt":"<h1> Promise题汇总</h1>\\n<h2> 遇到resolve会直接变更状态</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> promise1 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve<span class=\\"token punctuation\\">,</span> reject</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'promise1'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'resolve1'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> promise2 <span class=\\"token operator\\">=</span> promise1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">res</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'1'</span><span class=\\"token punctuation\\">,</span> promise1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'2'</span><span class=\\"token punctuation\\">,</span> promise2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
