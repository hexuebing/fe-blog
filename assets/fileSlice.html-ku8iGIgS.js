const n=JSON.parse('{"key":"v-14c17f20","path":"/posts/JavaScript/fileSlice.html","title":"文件分片上传","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2022-06-30T00:00:00.000Z","category":["JavaScript"],"tag":["File"],"star":true,"sticky":true,"description":"文件分片上传 File 是特殊类型的Blob，故而可以调用文件的slice方法将大文件进行切割。 const file = new File([\\"a\\".repeat(1000000)], \\"test.txt\\"); const chunkSize = 40000; // 切片大小 const url = \\"https://httpbin.org/post\\"; async function chunkedUpload() { for (let start = 0; start &lt; file.size; start += chunkSize) { const chunk = file.slice(start, start + chunkSize + 1); const fd = new FormData(); fd.append(\\"data\\", chunk); await fetch(url, { method: \\"post\\", body: fd }).then((res) =&gt; res.text() ); } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/JavaScript/fileSlice.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"文件分片上传"}],["meta",{"property":"og:description","content":"文件分片上传 File 是特殊类型的Blob，故而可以调用文件的slice方法将大文件进行切割。 const file = new File([\\"a\\".repeat(1000000)], \\"test.txt\\"); const chunkSize = 40000; // 切片大小 const url = \\"https://httpbin.org/post\\"; async function chunkedUpload() { for (let start = 0; start &lt; file.size; start += chunkSize) { const chunk = file.slice(start, start + chunkSize + 1); const fd = new FormData(); fd.append(\\"data\\", chunk); await fetch(url, { method: \\"post\\", body: fd }).then((res) =&gt; res.text() ); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-25T09:11:50.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:tag","content":"File"}],["meta",{"property":"article:published_time","content":"2022-06-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-25T09:11:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件分片上传\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-25T09:11:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1706173910000,"updatedTime":1706173910000,"contributors":[{"name":"何雪斌","email":"hexuebin@megvii.com","commits":1}]},"readingTime":{"minutes":1.25,"words":375},"filePathRelative":"posts/JavaScript/fileSlice.md","localizedDate":"2022年6月30日","excerpt":"<h1> 文件分片上传</h1>\\n<p>File <strong>是特殊类型的Blob</strong>，故而可以调用文件的slice方法将大文件进行切割。</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">const</span> file <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">File</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">repeat</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"test.txt\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> chunkSize <span class=\\"token operator\\">=</span> <span class=\\"token number\\">40000</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 切片大小</span>\\n<span class=\\"token keyword\\">const</span> url <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"https://httpbin.org/post\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">async</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">chunkedUpload</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> start <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> start <span class=\\"token operator\\">&lt;</span> file<span class=\\"token punctuation\\">.</span>size<span class=\\"token punctuation\\">;</span> start <span class=\\"token operator\\">+=</span> chunkSize<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> chunk <span class=\\"token operator\\">=</span> file<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span>start<span class=\\"token punctuation\\">,</span> start <span class=\\"token operator\\">+</span> chunkSize <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">const</span> fd <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">FormData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      fd<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">append</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"data\\"</span><span class=\\"token punctuation\\">,</span> chunk<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">method</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"post\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">body</span><span class=\\"token operator\\">:</span> fd <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span>\\n        res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">text</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
