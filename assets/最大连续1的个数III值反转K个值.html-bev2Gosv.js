import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as e}from"./app-vOT98TEA.js";const t={},p=e(`<h1 id="最大连续1的个数iii之反转k个0" tabindex="-1"><a class="header-anchor" href="#最大连续1的个数iii之反转k个0" aria-hidden="true">#</a> 最大连续1的个数III之反转K个0</h1><p>给定一个二进制数组 nums 和一个整数 k，如果可以翻转最多 k 个 0 ，则返回 数组中连续 1 的最大个数 。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1,1,1,0,0,0,1,1,1,1,0], K = 2
输出：6
解释：[1,1,1,0,0,1,1,1,1,1,1]
粗体数字从 0 翻转到 1，最长的子数组长度为 6。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">longestOnes</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 用来统计0的个数</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>right <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> rightCode <span class="token operator">=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>rightCode <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> count<span class="token operator">++</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span>count <span class="token operator">&gt;</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">const</span> leftCode <span class="token operator">=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>leftCode <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> count<span class="token operator">--</span>
            left<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        res <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        right<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","最大连续1的个数III值反转K个值.html.vue"]]);export{d as default};
