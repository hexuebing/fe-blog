const n=JSON.parse('{"key":"v-3acd59b1","path":"/posts/JavaScript/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%BB%A7%E6%89%BF.html","title":"实现继承","lang":"zh-CN","frontmatter":{"description":"实现继承 原型等于父实例继承 function SuperType() { this.property = true } SuperType.prototype.getSuperValue = function(){ return this.property; } function SubType(){ this.subProperty = false } // 继承SuperType SubType.prototype = new SuperType() SubType.prototype.getSubValue = function(){ return this.subProperty } let instance = new SubType()","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/JavaScript/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%BB%A7%E6%89%BF.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"实现继承"}],["meta",{"property":"og:description","content":"实现继承 原型等于父实例继承 function SuperType() { this.property = true } SuperType.prototype.getSuperValue = function(){ return this.property; } function SubType(){ this.subProperty = false } // 继承SuperType SubType.prototype = new SuperType() SubType.prototype.getSubValue = function(){ return this.subProperty } let instance = new SubType()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/fe-blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T12:30:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"实现继承"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-02-27T12:30:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实现继承\\",\\"image\\":[\\"https://mister-hope.github.io/fe-blog/\\"],\\"dateModified\\":\\"2024-02-27T12:30:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"原型等于父实例继承","slug":"原型等于父实例继承","link":"#原型等于父实例继承","children":[]},{"level":2,"title":"盗用构造函数继承","slug":"盗用构造函数继承","link":"#盗用构造函数继承","children":[]},{"level":2,"title":"组合继承","slug":"组合继承","link":"#组合继承","children":[]}],"git":{"createdTime":1708999333000,"updatedTime":1709037013000,"contributors":[{"name":"gift","email":"test@example.com","commits":2}]},"readingTime":{"minutes":1.29,"words":386},"filePathRelative":"posts/JavaScript/如何实现继承.md","localizedDate":"2024年2月27日","excerpt":"<h1> 实现继承</h1>\\n<h2> 原型等于父实例继承</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">SuperType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>property <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token class-name\\">SuperType</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">getSuperValue</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>property<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">SubType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>subProperty <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 继承SuperType</span>\\n<span class=\\"token class-name\\">SubType</span><span class=\\"token punctuation\\">.</span>prototype <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SuperType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token class-name\\">SubType</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">getSubValue</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>subProperty\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">let</span> instance <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SubType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
