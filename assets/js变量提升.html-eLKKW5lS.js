const n=JSON.parse('{"key":"v-15fdcff8","path":"/posts/JavaScript/js%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87.html","title":"函数变量提升","lang":"zh-CN","frontmatter":{"description":"函数变量提升 function Foo() { getName = function(){ console.log(1); }; return this; } Foo.getName = function() { console.log(2); }; Foo.prototype.getName = function(){ console.log(3); }; var getName = function() { console.log(4); }; function getName(){ console.log(5); } Foo.getName(); // 2 调用了Foo的方法 getName(); // 4 变量提升，函数的提升更加优先，所以会被变量覆盖 Foo().getName(); // 1 Foo()执行，覆盖了getName方法 getName(); // 1 上一步对全局getName进行了覆盖 new Foo.getName(); //2 调用了Foo.getName创建了它的实例 new Foo().getName(); // 3 创建了Foo的实例，优先访问到原型链上的方法","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/JavaScript/js%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"函数变量提升"}],["meta",{"property":"og:description","content":"函数变量提升 function Foo() { getName = function(){ console.log(1); }; return this; } Foo.getName = function() { console.log(2); }; Foo.prototype.getName = function(){ console.log(3); }; var getName = function() { console.log(4); }; function getName(){ console.log(5); } Foo.getName(); // 2 调用了Foo的方法 getName(); // 4 变量提升，函数的提升更加优先，所以会被变量覆盖 Foo().getName(); // 1 Foo()执行，覆盖了getName方法 getName(); // 1 上一步对全局getName进行了覆盖 new Foo.getName(); //2 调用了Foo.getName创建了它的实例 new Foo().getName(); // 3 创建了Foo的实例，优先访问到原型链上的方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-27T02:02:13.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-02-27T02:02:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数变量提升\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-27T02:02:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1708999333000,"updatedTime":1708999333000,"contributors":[{"name":"gift","email":"test@example.com","commits":1}]},"readingTime":{"minutes":0.44,"words":132},"filePathRelative":"posts/JavaScript/js变量提升.md","localizedDate":"2024年2月27日","excerpt":"<h1> 函数变量提升</h1>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">Foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function-variable function\\">getName</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span> console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nFoo<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">getName</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\">Foo</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">getName</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span> console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">getName</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span> console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n\\nFoo<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>             <span class=\\"token comment\\">// 2   调用了Foo的方法</span>\\n\\n<span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>                    <span class=\\"token comment\\">// 4    变量提升，函数的提升更加优先，所以会被变量覆盖</span>\\n\\n<span class=\\"token function\\">Foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">//  1    Foo()执行，覆盖了getName方法</span>\\n\\n<span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>                    <span class=\\"token comment\\">// 1      上一步对全局getName进行了覆盖</span>\\n\\n<span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Foo<span class=\\"token punctuation\\">.</span>getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>      <span class=\\"token comment\\">//2      调用了Foo.getName创建了它的实例</span>\\n\\n<span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>   <span class=\\"token comment\\">// 3      创建了Foo的实例，优先访问到原型链上的方法</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
