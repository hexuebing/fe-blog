const n=JSON.parse(`{"key":"v-a98613f2","path":"/posts/react/%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E4%B8%8E%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6.html","title":"受控组件与非受控组件","lang":"zh-CN","frontmatter":{"description":"受控组件与非受控组件 受控组件 表单数据交由state对象管理, 受控表单往往给予了我们更大的选择，例如比较复杂的、非 HTML 标准的表单校验，如检查密码强度和对用户手机号进行格式化。 特点：可以实时得到表单数据，代码相对复杂 import React, { useState } from 'react' function ControlledForm() { const [value, setValue] = useState(''); const handleChange = (event) =&gt; { setValue(event.target.value); }; const handleSubmit = () =&gt; { sendInputValueToApi(value).then(() =&gt; /** 业务逻辑... */); }; return ( &lt;&gt; &lt;input type=\\"text\\" value={value} onChange={handleChange} /&gt; &lt;button onClick={handleSubmit}&gt;send&lt;/button&gt; &lt;/&gt; ) }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/react/%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E4%B8%8E%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"受控组件与非受控组件"}],["meta",{"property":"og:description","content":"受控组件与非受控组件 受控组件 表单数据交由state对象管理, 受控表单往往给予了我们更大的选择，例如比较复杂的、非 HTML 标准的表单校验，如检查密码强度和对用户手机号进行格式化。 特点：可以实时得到表单数据，代码相对复杂 import React, { useState } from 'react' function ControlledForm() { const [value, setValue] = useState(''); const handleChange = (event) =&gt; { setValue(event.target.value); }; const handleSubmit = () =&gt; { sendInputValueToApi(value).then(() =&gt; /** 业务逻辑... */); }; return ( &lt;&gt; &lt;input type=\\"text\\" value={value} onChange={handleChange} /&gt; &lt;button onClick={handleSubmit}&gt;send&lt;/button&gt; &lt;/&gt; ) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-02T03:39:26.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-04-02T03:39:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"受控组件与非受控组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-02T03:39:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"受控组件","slug":"受控组件","link":"#受控组件","children":[{"level":3,"title":"受控缺点","slug":"受控缺点","link":"#受控缺点","children":[]}]},{"level":2,"title":"非受控组件","slug":"非受控组件","link":"#非受控组件","children":[]},{"level":2,"title":"混合使用","slug":"混合使用","link":"#混合使用","children":[]},{"level":2,"title":"选用标准","slug":"选用标准","link":"#选用标准","children":[]}],"git":{"createdTime":1710293221000,"updatedTime":1712029166000,"contributors":[{"name":"gift","email":"test@example.com","commits":1},{"name":"hexb","email":"test@example.com","commits":1}]},"readingTime":{"minutes":2.28,"words":683},"filePathRelative":"posts/react/受控组件与非受控组件.md","localizedDate":"2024年3月13日","excerpt":"<h1> 受控组件与非受控组件</h1>\\n<h2> 受控组件</h2>\\n<p>表单数据交由state对象管理, 受控表单往往给予了我们更大的选择，例如比较复杂的、非 HTML 标准的表单校验，如检查密码强度和对用户手机号进行格式化。</p>\\n<p>特点：可以实时得到表单数据，代码相对复杂</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">import</span> React<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> useState <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'react'</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">ControlledForm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>value<span class=\\"token punctuation\\">,</span> setValue<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">handleChange</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">event</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">setValue</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">.</span>target<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">handleSubmit</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">sendInputValueToApi</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token comment\\">/** 业务逻辑... */</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n      </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>input</span> <span class=\\"token attr-name\\">type</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>text<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">value</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>value<span class=\\"token punctuation\\">}</span></span> <span class=\\"token attr-name\\">onChange</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>handleChange<span class=\\"token punctuation\\">}</span></span> <span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token plain-text\\">\\n      </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">onClick</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span>handleSubmit<span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">send</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n    </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
