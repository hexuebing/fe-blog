const n=JSON.parse('{"key":"v-226ad302","path":"/posts/JavaScript/curry.html","title":"柯里化","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2022-08-17T00:00:00.000Z","category":["JavaScript"],"tag":["柯里化"],"description":"柯里化 定义一个闭包变量，用来存储每次调用的参数 包裹目标函数之后返回一个新函数 调用新函数，每次传入的参数收集到闭包变量 如果闭包变量的长度到达指定长度，则调用目标函数并传入收集的参数，否则返回这个新函数 function currying(fn) { \\tlet args = [] \\treturn function f(){ \\t\\targs.push(...arguments) \\t\\tif(args.length &gt;= 3){ \\t\\t\\t// deepcopy args \\t\\t\\tconst params = JSON.parse(JSON.stringify(args)) \\t\\t\\targs = [] \\t\\t\\treturn fn.apply(null, params) \\t\\t}else{ \\t\\t\\treturn f \\t\\t} \\t} }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/JavaScript/curry.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"柯里化"}],["meta",{"property":"og:description","content":"柯里化 定义一个闭包变量，用来存储每次调用的参数 包裹目标函数之后返回一个新函数 调用新函数，每次传入的参数收集到闭包变量 如果闭包变量的长度到达指定长度，则调用目标函数并传入收集的参数，否则返回这个新函数 function currying(fn) { \\tlet args = [] \\treturn function f(){ \\t\\targs.push(...arguments) \\t\\tif(args.length &gt;= 3){ \\t\\t\\t// deepcopy args \\t\\t\\tconst params = JSON.parse(JSON.stringify(args)) \\t\\t\\targs = [] \\t\\t\\treturn fn.apply(null, params) \\t\\t}else{ \\t\\t\\treturn f \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T09:29:10.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:tag","content":"柯里化"}],["meta",{"property":"article:published_time","content":"2022-08-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-24T09:29:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"柯里化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-24T09:29:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"另外一种写法","slug":"另外一种写法","link":"#另外一种写法","children":[]}],"git":{"createdTime":1706088550000,"updatedTime":1706088550000,"contributors":[{"name":"何雪斌","email":"hexuebin@megvii.com","commits":1}]},"readingTime":{"minutes":0.96,"words":288},"filePathRelative":"posts/JavaScript/curry.md","localizedDate":"2022年8月17日","excerpt":"<h1> 柯里化</h1>\\n<ol>\\n<li>定义一个闭包变量，用来存储每次调用的参数</li>\\n<li>包裹目标函数之后返回一个新函数</li>\\n<li>调用新函数，每次传入的参数收集到闭包变量</li>\\n<li>如果闭包变量的长度到达指定长度，则调用目标函数并传入收集的参数，否则返回这个新函数</li>\\n</ol>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">currying</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">fn</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">let</span> args <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\targs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span>arguments<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>args<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token comment\\">// deepcopy args</span>\\n\\t\\t\\t<span class=\\"token keyword\\">const</span> params <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stringify</span><span class=\\"token punctuation\\">(</span>args<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t\\targs <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">apply</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> params<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> f\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
