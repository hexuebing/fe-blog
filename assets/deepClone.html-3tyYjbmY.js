const t=JSON.parse(`{"key":"v-186442f5","path":"/posts/JavaScript/deepClone.html","title":"深拷贝","lang":"zh-CN","frontmatter":{"icon":"javascript","date":"2022-01-17T00:00:00.000Z","category":["JavaScript"],"tag":["new"],"star":true,"sticky":true,"description":"深拷贝 判断传入值是否为对象 创造一个新对象，迭代传入对象进行赋值 对象的value为对象的话，递归调用函数 迭代完毕返回这个对象 传入非对象直接返回这个值 基础版本 function clone(target){ \\tif(typeof target === 'object'){ \\t\\tconst cloneTarget = {} \\t\\tfor(let key in target){ \\t\\t\\tcloneTarget[key] = clone(target[key]) \\t\\t} \\t\\treturn cloneTarget \\t}else{ \\t\\treturn target \\t} }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/JavaScript/deepClone.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"深拷贝"}],["meta",{"property":"og:description","content":"深拷贝 判断传入值是否为对象 创造一个新对象，迭代传入对象进行赋值 对象的value为对象的话，递归调用函数 迭代完毕返回这个对象 传入非对象直接返回这个值 基础版本 function clone(target){ \\tif(typeof target === 'object'){ \\t\\tconst cloneTarget = {} \\t\\tfor(let key in target){ \\t\\t\\tcloneTarget[key] = clone(target[key]) \\t\\t} \\t\\treturn cloneTarget \\t}else{ \\t\\treturn target \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T09:29:10.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:tag","content":"new"}],["meta",{"property":"article:published_time","content":"2022-01-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-24T09:29:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深拷贝\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-24T09:29:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1706088550000,"updatedTime":1706088550000,"contributors":[{"name":"何雪斌","email":"hexuebin@megvii.com","commits":1}]},"readingTime":{"minutes":0.8,"words":241},"filePathRelative":"posts/JavaScript/deepClone.md","localizedDate":"2022年1月17日","excerpt":"<h1> 深拷贝</h1>\\n<ol>\\n<li>判断传入值是否为对象</li>\\n<li>创造一个新对象，迭代传入对象进行赋值</li>\\n<li>对象的value为对象的话，递归调用函数</li>\\n<li>迭代完毕返回这个对象</li>\\n<li>传入非对象直接返回这个值</li>\\n</ol>\\n<h1> 基础版本</h1>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">clone</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">target</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> target <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">const</span> cloneTarget <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\t\\t<span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> key <span class=\\"token keyword\\">in</span> target<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t\\tcloneTarget<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">clone</span><span class=\\"token punctuation\\">(</span>target<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> cloneTarget\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> target\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
