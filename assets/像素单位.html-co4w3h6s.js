import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as r,f as d}from"./app-1TN7qpaP.js";const c={},o=d('<h1 id="px、em、rem区别" tabindex="-1"><a class="header-anchor" href="#px、em、rem区别" aria-hidden="true">#</a> px、em、rem区别</h1><h2 id="px" tabindex="-1"><a class="header-anchor" href="#px" aria-hidden="true">#</a> PX</h2><p><code>px像素（Pixel）</code>。相对长度单位。像素px是相对于显示器屏幕分辨率而言的。</p><h2 id="em" tabindex="-1"><a class="header-anchor" href="#em" aria-hidden="true">#</a> EM</h2><p><code>em</code>是相对长度单位。相对于<code>当前对象内文本的字体尺寸</code>。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。</p><p>任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: <code>1em=16px</code></p><h2 id="rem" tabindex="-1"><a class="header-anchor" href="#rem" aria-hidden="true">#</a> REM</h2><p><code>rem</code>是CSS3新增的一个相对单位（root em，根em）</p><p>使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。</p>',9),t=[o];function h(i,n){return a(),r("div",null,t)}const s=e(c,[["render",h],["__file","像素单位.html.vue"]]);export{s as default};
