const n=JSON.parse('{"key":"v-5c800d6e","path":"/posts/TypeScript/%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B.html","title":"函数类型","lang":"zh-CN","frontmatter":{"description":"函数类型 函数类型定义 直接定义 定义包括对参数和返回值的类型定义 function add(arg1: number, arg2: number): number { return x + y; } const add = (arg1: number, arg2: number): number =&gt; { return x + y; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/fe-blog/posts/TypeScript/%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"函数类型"}],["meta",{"property":"og:description","content":"函数类型 函数类型定义 直接定义 定义包括对参数和返回值的类型定义 function add(arg1: number, arg2: number): number { return x + y; } const add = (arg1: number, arg2: number): number =&gt; { return x + y; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-24T03:19:14.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:modified_time","content":"2024-06-24T03:19:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-24T03:19:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"函数类型定义","slug":"函数类型定义","link":"#函数类型定义","children":[{"level":3,"title":"直接定义","slug":"直接定义","link":"#直接定义","children":[]},{"level":3,"title":"接口定义","slug":"接口定义","link":"#接口定义","children":[]},{"level":3,"title":"类型别名定义","slug":"类型别名定义","link":"#类型别名定义","children":[]}]},{"level":2,"title":"函数重载","slug":"函数重载","link":"#函数重载","children":[]}],"git":{"createdTime":1719199154000,"updatedTime":1719199154000,"contributors":[{"name":"hexb","email":"test@example.com","commits":1}]},"readingTime":{"minutes":1.22,"words":365},"filePathRelative":"posts/TypeScript/函数类型.md","localizedDate":"2024年6月24日","excerpt":"<h1> 函数类型</h1>\\n<h2> 函数类型定义</h2>\\n<h3> 直接定义</h3>\\n<p>定义包括对参数和返回值的类型定义</p>\\n<div class=\\"language-tsx line-numbers-mode\\" data-ext=\\"tsx\\"><pre class=\\"language-tsx\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>arg1<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> arg2<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> x <span class=\\"token operator\\">+</span> y<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> add <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>arg1<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> arg2<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> x <span class=\\"token operator\\">+</span> y<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
